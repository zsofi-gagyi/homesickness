@{
    Layout = "_Layout";
}
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        let timesArray = @Html.Raw(Json.Serialize(ViewData["times"]));
        let bpArray = @Html.Raw(Json.Serialize(ViewData["bpTemps"]));
        let csArray = @Html.Raw(Json.Serialize(ViewData["csTemps"]));
        let dataPointsNumber = @Html.Raw(Json.Serialize(ViewData["dataPointsNumber"]));

        function drawChart() {

            let dataTable = [['time', 'Budapest', 'Csíkszereda']];
            for (let i = 0; i < dataPointsNumber; i++) {
                dataTable.push([new Date(timesArray[i]), bpArray[i], csArray[i]]);
            }

            let data = google.visualization.arrayToDataTable(dataTable);

            let options = {
                colors: ['orange', 'blue'],
                vAxis: {
                   
                    title: 'temperature in °C',
                    titleTextStyle: {
                        fontSize: '18',
                        bold: 'true',
                        italic:'true'
                    },
                    textStyle: {
                        fontSize: '18',
                        bold: 'true'
                    },
                    gridlines: {
                        color: 'black'
                    },
                    minorGridlines: {
                        color: 'grey'
                    }
                },
                hAxis: {
                    textStyle: {
                        fontSize: '18',
                        bold: 'true'
                    },
                    minorGridlines: {
                        count: '0'
                    },
                    gridlines: {
                        color: "lightgrey",
                        units: {
                            months: { format: ['MMM. YYYY'] },
                            days: { format: ['MMM. dd'] },
                            hours: { format: ['ha'] }
                        }
                    },
                },
                chartArea: {
                    width: "87%",
                    height: "75%",
                    left: "100"
                },
                legend: {
                    position: 'top',
                    alignment: 'end',
                    textStyle: {
                        fontSize: '25',
                        bold: 'true',
                        italic: 'true'
                    }
                },
                backgroundColor: "#edebeb",

            };

            let chart = new google.visualization.AreaChart(document.getElementById('area_chart'));
            chart.draw(data, options);
        }
    </script>
    <script>
        google.charts.load("current", { packages: ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        let worstAnnotation = @Html.Raw(Json.Serialize(ViewData["worstAnnotation"]));
        let latestAnnotation = @Html.Raw(Json.Serialize(ViewData["latestAnnotation"]));
        let worstIndex = @Html.Raw(Json.Serialize(ViewData["worstIndex"]));
        let latestIndex = @Html.Raw(Json.Serialize(ViewData["latestIndex"]));

        function drawChart() {
            let data = new google.visualization.DataTable();
            data.addColumn('string', 'coumn name'); 
            data.addColumn('number', 'index value'); 
            data.addColumn({ type: 'string', role: 'annotation' });
            data.addColumn({type:'string', role:'style'});
            data.addRows([
                ['worst yet', worstIndex,  worstAnnotation, "color: #c9c9c9"],
                ['current',  latestIndex, latestAnnotation, "color: #9d8ab4"]
            ]);

            let view = new google.visualization.DataView(data);

            let myTicks = [{ v: 0, f: 'Budapest is a beautiful city' }];
            for (let i = 0; i < 5; i++) {
                myTicks.push({ v: i * 1000, f: " " });
            }
            myTicks.push({ v: 5000, f: 'not great, not terrible' });
            for (let i = 6; i < 10; i++) {
                myTicks.push({ v: i * 1000, f: " " });
            }
            myTicks.push({ v: 10000, f: "when's the first train home?" });

            let options = {
                bar: { groupWidth: "70%" },
                enableInteractivity: true,
                vAxis: {
                    ticks: myTicks,
                    gridlines: {
                        color: 'black'
                    },
                    textStyle: {
                        fontSize: '18',
                        bold: 'true'
                    }
                },
                hAxis: {
                    textStyle: {
                        fontSize: '18',
                        bold: 'true'
                    }
                },
                chartArea: {
                    width: "90%",
                    height: "75%",
                    left: "140"
                },
                backgroundColor: "#edebeb",
                annotations: {
                    textStyle: {
                        fontSize: '16',
                        bold: 'true',
                        color: 'black'
                    }
                }
            };
            let chart = new google.visualization.ColumnChart(document.getElementById("column_chart"));
            chart.draw(view, options);
        }
    </script>